DROP DATABASE conerivedev;
CREATE DATABASE conerivedev;
USE conerivedev;

-- CREATE COMMANDS

CREATE TABLE USERS (
	User_id VARCHAR(100) PRIMARY KEY,
	Name VARCHAR(100) NOT NULL,
	Phone VARCHAR(100) NOT NULL,
	UNIQUE(Phone)
);

CREATE TABLE USER_DISPLAY_PICTURES (
	User_id VARCHAR(100) PRIMARY KEY,
	FOREIGN KEY(User_id) REFERENCES USERS(User_id) ON DELETE CASCADE,
	Image_url VARCHAR(10000) NOT NULL
);

CREATE TABLE GROUPS (
	Group_id INT AUTO_INCREMENT PRIMARY KEY,
	Group_name VARCHAR(100) NOT NULL,
	Admin_id VARCHAR(100) NOT NULL,
	FOREIGN KEY(Admin_ID) REFERENCES USERS(User_id) ON DELETE CASCADE,
	UNIQUE(Group_id, Admin_ID)
);

CREATE TABLE GROUP_DISPLAY_PICTURES (
	Group_id INT PRIMARY KEY,
	Image_url VARCHAR(100) NOT NULL,
	FOREIGN KEY(Group_id) REFERENCES GROUPS(Group_id) ON DELETE CASCADE
);

CREATE TABLE GROUP_MEMBERS ( 
	Group_id INT NOT NULL,
	User_id VARCHAR(100) NOT NULL,
	FOREIGN KEY(Group_id) REFERENCES GROUPS(Group_id) ON DELETE CASCADE,
	FOREIGN KEY(User_id) REFERENCES USERS(User_id) ON DELETE CASCADE,
	PRIMARY KEY(Group_id, User_id)
);

CREATE TABLE TRIPS (
	Trip_id INT AUTO_INCREMENT PRIMARY KEY,
	Trip_name VARCHAR(100) NOT NULL,
	Group_id INT NOT NULL,
	FOREIGN KEY(Group_id) REFERENCES GROUPS(Group_id) ON DELETE CASCADE,
	UNIQUE(Trip_id, Group_ID)
);

CREATE TABLE TRIP_NOTIFICATION_RADIUS (
	Trip_id INT PRIMARY KEY,
	Notification_radius DOUBLE NOT NULL,
	FOREIGN KEY(Trip_id) REFERENCES TRIPS(Trip_id) ON DELETE CASCADE
);

CREATE TABLE TRIP_MEMBERS ( 
	Trip_id INT NOT NULL,
	User_id VARCHAR(100) NOT NULL,
	FOREIGN KEY(Trip_id) REFERENCES TRIPS(Trip_id) ON DELETE CASCADE,
	FOREIGN KEY(User_id) REFERENCES GROUP_MEMBERS(User_id) ON DELETE CASCADE,
	PRIMARY KEY(Trip_id, User_id)
);

CREATE TABLE VEHICLES (
	Vehicle_id INT AUTO_INCREMENT PRIMARY KEY,
	Vehicle_name VARCHAR(100) NOT NULL,
	Vehicle_type VARCHAR(100) NOT NULL,
	Driver_id VARCHAR(100) NOT NULL,
	Trip_id INT NOT NULL,
	FOREIGN KEY(Driver_id) REFERENCES TRIP_MEMBERS(User_id) ON DELETE CASCADE,
	FOREIGN KEY(Trip_id) REFERENCES TRIPS(Trip_id) ON DELETE CASCADE,
	UNIQUE(Driver_id, Trip_id)
);

CREATE TABLE VEHICLE_MEMBERS (
	Vehicle_id INT NOT NULL,
	User_id VARCHAR(100) NOT NULL,
	FOREIGN KEY(Vehicle_id) REFERENCES VEHICLES(Vehicle_id) ON DELETE CASCADE,
	FOREIGN KEY(User_id) REFERENCES TRIP_MEMBERS(User_id) ON DELETE CASCADE,
	PRIMARY KEY(Vehicle_id, User_id)
);

CREATE TABLE IMAGES (
	Image_id INT AUTO_INCREMENT PRIMARY KEY,
	Image_url VARCHAR(100) NOT NULL,
	Image_time DATETIME NOT NULL,
	Image_lat DOUBLE NOT NULL,
	Image_lng DOUBLE NOT NULL,
	User_id VARCHAR(100) NOT NULL,
	FOREIGN KEY(User_id) REFERENCES TRIP_MEMBERS(User_id) ON DELETE CASCADE,
	Trip_id INT NOT NULL,
	FOREIGN KEY(Trip_id) REFERENCES TRIPS(Trip_id) ON DELETE CASCADE
);

CREATE TABLE EMAILS (
	User_id VARCHAR(100) PRIMARY KEY,
	Email_id VARCHAR(100) NOT NULL,
	FOREIGN KEY(User_id) REFERENCES USERS(User_id) ON DELETE CASCADE,
	UNIQUE(Email_id) 	
);

-- Tables to be added
-- google drive auth
-- instagram auth
-- facebook auth

-- SELECT COMMANDS
SELECT * FROM USERS 
NATURAL LEFT JOIN USER_DISPLAY_PICTURES
NATURAL LEFT JOIN EMAILS;

-- crazy qury
SELECT 
	Group_id, 
	Group_name, 
	Image_url as Group_Display_picture, 
	count(User_id) as Member_count,
	Trip_count,
	Image_count
FROM GROUPS
NATURAL LEFT JOIN GROUP_DISPLAY_PICTURES
NATURAL LEFT JOIN GROUP_MEMBERS
NATURAL LEFT JOIN (
		
	SELECT 
		Group_id, 
		count(Trip_id) as Trip_count
	FROM GROUPS 
	NATURAL LEFT JOIN TRIPS
	GROUP BY Group_id
) g1 NATURAL LEFT JOIN (

	SELECT 
		Group_id,
		count(Image_id) as Image_count
	FROM GROUPS
	NATURAL LEFT JOIN TRIPS
	NATURAL LEFT JOIN IMAGES 
	GROUP BY Group_id
) g2 WHERE Group_id IN (
	SELECT Group_id
	FROM GROUPS 
	NATURAL LEFT JOIN GROUP_MEMBERS
	WHERE User_id = "6969") 
GROUP BY Group_id;




where Group_id IN (
	SELECT Group_id
	FROM GROUPS 
	NATURAL LEFT JOIN GROUP_MEMBERS
	WHERE User_id = "6969")

SELECT 
Group_id,
count(Image_id) as Image_count
FROM IMAGES NATURAL LEFT JOIN TRIPS
GROUP BY Group_id;



INSERT INTO TRIP_MEMBERS
VALUES
(1, "6969"),
(2, "6969"),
(2, "asd");

INSERT INTO TRIPS(Trip_name, Group_id) VALUES
("yako", 7);

INSERT INTO IMAGES (
	Image_url,
	Image_time,
	Image_lat,
	Image_lng,
	User_id,
	Trip_id
) VALUES 
("abc://asaasdsdd", "2018-02-10 10-12-11", 112.213, 13.123, "asd", 4);
